{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/strk/Sites/nextjs-dashboard/app/ui/invoices/pagination.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/ui/invoices/pagination.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/ui/invoices/pagination.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,icAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAkS,GAC/T,gEACA"}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file:///Users/strk/Sites/nextjs-dashboard/app/ui/invoices/pagination.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/ui/invoices/pagination.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/ui/invoices/pagination.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,icAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA8Q,GAC3S,4CACA"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["file:///Users/strk/Sites/nextjs-dashboard/app/ui/search.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/ui/search.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/ui/search.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,icAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAqR,GAClT,mDACA"}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":["file:///Users/strk/Sites/nextjs-dashboard/app/ui/search.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/ui/search.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/ui/search.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,icAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAiQ,GAC9R,+BACA"}},
    {"offset": {"line": 67, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 73, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 179, "column": 0}, "map": {"version":3,"sources":["file:///Users/strk/Sites/nextjs-dashboard/app/lib/actions.ts"],"sourcesContent":["'use server';\n\nimport { z } from 'zod';\nimport { db } from '@vercel/postgres';\nimport { revalidatePath } from 'next/cache';\nimport { redirect } from 'next/navigation';\n\nconst client = await db.connect();\n\nconst FormSchema = z.object({\n  id: z.string(),\n  customerId: z.string({\n    invalid_type_error: 'Please select a customer.',\n  }),\n  amount: z.coerce\n    .number()\n    .gt(0, { message: 'Please enter an amount greater than $0.' }),\n  status: z.enum(['pending', 'paid'], {\n    invalid_type_error: 'Please select an invoice status.',\n  }),\n  date: z.string(),\n});\n\nconst CreateInvoice = FormSchema.omit({ id: true, date: true });\nconst UpdateInvoice = FormSchema.omit({ id: true, date: true });\n\nexport type State = {\n  errors?: {\n    customerId?: string[];\n    amount?: string[];\n    status?: string[];\n  };\n  message?: string | null;\n};\n\nexport async function createInvoice(prevState: State, formData: FormData) {\n  // Validate form using Zod\n  const validatedFields = CreateInvoice.safeParse({\n    customerId: formData.get('customerId'),\n    amount: formData.get('amount'),\n    status: formData.get('status'),\n  });\n\n  // If form validation fails, return errors early. Otherwise, continue.\n  if (!validatedFields.success) {\n    return {\n      errors: validatedFields.error.flatten().fieldErrors,\n      message: 'Missing Fields. Failed to Create Invoice.',\n    };\n  }\n\n  // Prepare data for insertion into the database\n  const { customerId, amount, status } = validatedFields.data;\n  const amountInCents = amount * 100;\n  const date = new Date().toISOString().split('T')[0];\n\n  try {\n    await client.sql`\n      INSERT INTO invoices (customer_id, amount, status, date)\n      VALUES (${customerId}, ${amountInCents}, ${status}, ${date})\n    `;\n  } catch (error) {\n    console.log(error);\n    return {\n      message: 'Database Error: Failed to Create Invoice.',\n    };\n  }\n\n  revalidatePath('/dashboard/invoices');\n  redirect('/dashboard/invoices');\n}\n\nexport async function updateInvoice(\n  id: string,\n  prevState: State,\n  formData: FormData\n) {\n  const validatedFields = UpdateInvoice.safeParse({\n    customerId: formData.get('customerId'),\n    amount: formData.get('amount'),\n    status: formData.get('status'),\n  });\n\n  if (!validatedFields.success) {\n    return {\n      errors: validatedFields.error.flatten().fieldErrors,\n      message: 'Missing Fields. Failed to Update Invoice.',\n    };\n  }\n\n  const { customerId, amount, status } = validatedFields.data;\n  const amountInCents = amount * 100;\n\n  try {\n    await client.sql`\n        UPDATE invoices\n        SET customer_id = ${customerId}, amount = ${amountInCents}, status = ${status}\n        WHERE id = ${id}\n      `;\n  } catch (error) {\n    console.log(error);\n    return { message: 'Database Error: Failed to Update Invoice.' };\n  }\n\n  revalidatePath('/dashboard/invoices');\n  redirect('/dashboard/invoices');\n}\n\nexport async function deleteInvoice(id: string) {\n  try {\n    await client.sql`DELETE FROM invoices WHERE id = ${id}`;\n    revalidatePath('/dashboard/invoices');\n    return { message: 'Deleted Invoice.' };\n  } catch (error) {\n    console.log(error);\n    return { message: 'Database Error: Failed to Delete Invoice.' };\n  }\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 308, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 315, "column": 0}, "map": {"version":3,"sources":["file:///Users/strk/Sites/nextjs-dashboard/app/ui/invoices/buttons.tsx"],"sourcesContent":["import { PencilIcon, PlusIcon, TrashIcon } from '@heroicons/react/24/outline';\nimport Link from 'next/link';\nimport { deleteInvoice } from '@/app/lib/actions';\n\nexport function CreateInvoice() {\n  return (\n    <Link\n      href='/dashboard/invoices/create'\n      className='flex h-10 items-center rounded-lg bg-blue-600 px-4 text-sm font-medium text-white transition-colors hover:bg-blue-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-blue-600'\n    >\n      <span className='hidden md:block'>Create Invoice</span>{' '}\n      <PlusIcon className='h-5 md:ml-4' />\n    </Link>\n  );\n}\n\nexport function UpdateInvoice({ id }: { id: string }) {\n  return (\n    <Link\n      href={`/dashboard/invoices/${id}/edit`}\n      className='rounded-md border p-2 hover:bg-gray-100'\n    >\n      <PencilIcon className='w-5' />\n    </Link>\n  );\n}\n\nexport function DeleteInvoice({ id }: { id: string }) {\n  const deleteInvoiceWithId = deleteInvoice.bind(null, id);\n\n  return (\n    <form action={deleteInvoiceWithId}>\n      <button className='rounded-md border p-2 hover:bg-gray-100'>\n        <span className='sr-only'>Delete</span>\n        <TrashIcon className='w-5' />\n      </button>\n    </form>\n  );\n}\n"],"names":[],"mappings":";;;;;;AACA;AACA;AAFA;AAAA;AAAA;;;;;;;;;AAIO,SAAS;IACd,qBACE,0bAAC,wWAAA,CAAA,UAAI;QACH,MAAK;QACL,WAAU;;0BAEV,0bAAC;gBAAK,WAAU;0BAAkB;;;;;;YAAsB;0BACxD,0bAAC,oUAAA,CAAA,WAAQ;gBAAC,WAAU;;;;;;;;;;;;AAG1B;AAEO,SAAS,cAAc,EAAE,EAAE,EAAkB;IAClD,qBACE,0bAAC,wWAAA,CAAA,UAAI;QACH,MAAM,CAAC,oBAAoB,EAAE,GAAG,KAAK,CAAC;QACtC,WAAU;kBAEV,cAAA,0bAAC,wUAAA,CAAA,aAAU;YAAC,WAAU;;;;;;;;;;;AAG5B;AAEO,SAAS,cAAc,EAAE,EAAE,EAAkB;IAClD,MAAM,sBAAsB,qHAAA,CAAA,gBAAa,CAAC,IAAI,CAAC,MAAM;IAErD,qBACE,0bAAC;QAAK,QAAQ;kBACZ,cAAA,0bAAC;YAAO,WAAU;;8BAChB,0bAAC;oBAAK,WAAU;8BAAU;;;;;;8BAC1B,0bAAC,sUAAA,CAAA,YAAS;oBAAC,WAAU;;;;;;;;;;;;;;;;;AAI7B"}},
    {"offset": {"line": 413, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 420, "column": 0}, "map": {"version":3,"sources":["file:///Users/strk/Sites/nextjs-dashboard/app/ui/invoices/status.tsx"],"sourcesContent":["import { CheckIcon, ClockIcon } from '@heroicons/react/24/outline';\nimport clsx from 'clsx';\n\nexport default function InvoiceStatus({ status }: { status: string }) {\n  return (\n    <span\n      className={clsx(\n        'inline-flex items-center rounded-full px-2 py-1 text-xs',\n        {\n          'bg-gray-100 text-gray-500': status === 'pending',\n          'bg-green-500 text-white': status === 'paid',\n        },\n      )}\n    >\n      {status === 'pending' ? (\n        <>\n          Pending\n          <ClockIcon className=\"ml-1 w-4 text-gray-500\" />\n        </>\n      ) : null}\n      {status === 'paid' ? (\n        <>\n          Paid\n          <CheckIcon className=\"ml-1 w-4 text-white\" />\n        </>\n      ) : null}\n    </span>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AADA;AAAA;;;;AAGe,SAAS,cAAc,EAAE,MAAM,EAAsB;IAClE,qBACE,0bAAC;QACC,WAAW,CAAA,GAAA,sLAAA,CAAA,UAAI,AAAD,EACZ,2DACA;YACE,6BAA6B,WAAW;YACxC,2BAA2B,WAAW;QACxC;;YAGD,WAAW,0BACV;;oBAAE;kCAEA,0bAAC,sUAAA,CAAA,YAAS;wBAAC,WAAU;;;;;;;+BAErB;YACH,WAAW,uBACV;;oBAAE;kCAEA,0bAAC,sUAAA,CAAA,YAAS;wBAAC,WAAU;;;;;;;+BAErB;;;;;;;AAGV"}},
    {"offset": {"line": 468, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 474, "column": 0}, "map": {"version":3,"sources":["file:///Users/strk/Sites/nextjs-dashboard/app/lib/utils.ts"],"sourcesContent":["import { Revenue } from './definitions';\n\nexport const formatCurrency = (amount: number) => {\n  return (amount / 100).toLocaleString('en-US', {\n    style: 'currency',\n    currency: 'USD',\n  });\n};\n\nexport const formatDateToLocal = (\n  dateStr: string,\n  locale: string = 'en-US',\n) => {\n  const date = new Date(dateStr);\n  const options: Intl.DateTimeFormatOptions = {\n    day: 'numeric',\n    month: 'short',\n    year: 'numeric',\n  };\n  const formatter = new Intl.DateTimeFormat(locale, options);\n  return formatter.format(date);\n};\n\nexport const generateYAxis = (revenue: Revenue[]) => {\n  // Calculate what labels we need to display on the y-axis\n  // based on highest record and in 1000s\n  const yAxisLabels = [];\n  const highestRecord = Math.max(...revenue.map((month) => month.revenue));\n  const topLabel = Math.ceil(highestRecord / 1000) * 1000;\n\n  for (let i = topLabel; i >= 0; i -= 1000) {\n    yAxisLabels.push(`$${i / 1000}K`);\n  }\n\n  return { yAxisLabels, topLabel };\n};\n\nexport const generatePagination = (currentPage: number, totalPages: number) => {\n  // If the total number of pages is 7 or less,\n  // display all pages without any ellipsis.\n  if (totalPages <= 7) {\n    return Array.from({ length: totalPages }, (_, i) => i + 1);\n  }\n\n  // If the current page is among the first 3 pages,\n  // show the first 3, an ellipsis, and the last 2 pages.\n  if (currentPage <= 3) {\n    return [1, 2, 3, '...', totalPages - 1, totalPages];\n  }\n\n  // If the current page is among the last 3 pages,\n  // show the first 2, an ellipsis, and the last 3 pages.\n  if (currentPage >= totalPages - 2) {\n    return [1, 2, '...', totalPages - 2, totalPages - 1, totalPages];\n  }\n\n  // If the current page is somewhere in the middle,\n  // show the first page, an ellipsis, the current page and its neighbors,\n  // another ellipsis, and the last page.\n  return [\n    1,\n    '...',\n    currentPage - 1,\n    currentPage,\n    currentPage + 1,\n    '...',\n    totalPages,\n  ];\n};\n"],"names":[],"mappings":";;;;;;AAEO,MAAM,iBAAiB,CAAC;IAC7B,OAAO,CAAC,SAAS,GAAG,EAAE,cAAc,CAAC,SAAS;QAC5C,OAAO;QACP,UAAU;IACZ;AACF;AAEO,MAAM,oBAAoB,CAC/B,SACA,SAAiB,OAAO;IAExB,MAAM,OAAO,IAAI,KAAK;IACtB,MAAM,UAAsC;QAC1C,KAAK;QACL,OAAO;QACP,MAAM;IACR;IACA,MAAM,YAAY,IAAI,KAAK,cAAc,CAAC,QAAQ;IAClD,OAAO,UAAU,MAAM,CAAC;AAC1B;AAEO,MAAM,gBAAgB,CAAC;IAC5B,yDAAyD;IACzD,uCAAuC;IACvC,MAAM,cAAc,EAAE;IACtB,MAAM,gBAAgB,KAAK,GAAG,IAAI,QAAQ,GAAG,CAAC,CAAC,QAAU,MAAM,OAAO;IACtE,MAAM,WAAW,KAAK,IAAI,CAAC,gBAAgB,QAAQ;IAEnD,IAAK,IAAI,IAAI,UAAU,KAAK,GAAG,KAAK,KAAM;QACxC,YAAY,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,KAAK,CAAC,CAAC;IAClC;IAEA,OAAO;QAAE;QAAa;IAAS;AACjC;AAEO,MAAM,qBAAqB,CAAC,aAAqB;IACtD,6CAA6C;IAC7C,0CAA0C;IAC1C,IAAI,cAAc,GAAG;QACnB,OAAO,MAAM,IAAI,CAAC;YAAE,QAAQ;QAAW,GAAG,CAAC,GAAG,IAAM,IAAI;IAC1D;IAEA,kDAAkD;IAClD,uDAAuD;IACvD,IAAI,eAAe,GAAG;QACpB,OAAO;YAAC;YAAG;YAAG;YAAG;YAAO,aAAa;YAAG;SAAW;IACrD;IAEA,iDAAiD;IACjD,uDAAuD;IACvD,IAAI,eAAe,aAAa,GAAG;QACjC,OAAO;YAAC;YAAG;YAAG;YAAO,aAAa;YAAG,aAAa;YAAG;SAAW;IAClE;IAEA,kDAAkD;IAClD,wEAAwE;IACxE,uCAAuC;IACvC,OAAO;QACL;QACA;QACA,cAAc;QACd;QACA,cAAc;QACd;QACA;KACD;AACH"}},
    {"offset": {"line": 555, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 561, "column": 0}, "map": {"version":3,"sources":["file:///Users/strk/Sites/nextjs-dashboard/app/lib/data.ts"],"sourcesContent":["import { db } from '@vercel/postgres';\nimport {\n  CustomerField,\n  CustomersTableType,\n  InvoiceForm,\n  InvoicesTable,\n  LatestInvoiceRaw,\n  Revenue,\n} from './definitions';\nimport { formatCurrency } from './utils';\n\nconst client = await db.connect();\n\nexport async function fetchRevenue() {\n  try {\n    // Artificially delay a response for demo purposes.\n    // Don't do this in production :)\n\n    console.log('Fetching revenue data...');\n    await new Promise((resolve) => setTimeout(resolve, 3000));\n\n    const data = await client.sql<Revenue>`SELECT * FROM revenue`;\n\n    console.log('Data fetch completed after 3 seconds.');\n\n    return data.rows;\n  } catch (error) {\n    console.error('Database Error:', error);\n    throw new Error('Failed to fetch revenue data.');\n  }\n}\n\nexport async function fetchLatestInvoices() {\n  try {\n    const data = await client.sql<LatestInvoiceRaw>`\n      SELECT invoices.amount, customers.name, customers.image_url, customers.email, invoices.id\n      FROM invoices\n      JOIN customers ON invoices.customer_id = customers.id\n      ORDER BY invoices.date DESC\n      LIMIT 5`;\n\n    const latestInvoices = data.rows.map((invoice) => ({\n      ...invoice,\n      amount: formatCurrency(invoice.amount),\n    }));\n    return latestInvoices;\n  } catch (error) {\n    console.error('Database Error:', error);\n    throw new Error('Failed to fetch the latest invoices.');\n  }\n}\n\nexport async function fetchCardData() {\n  try {\n    // You can probably combine these into a single SQL query\n    // However, we are intentionally splitting them to demonstrate\n    // how to initialize multiple queries in parallel with JS.\n    const invoiceCountPromise = client.sql`SELECT COUNT(*) FROM invoices`;\n    const customerCountPromise = client.sql`SELECT COUNT(*) FROM customers`;\n    const invoiceStatusPromise = client.sql`SELECT\n         SUM(CASE WHEN status = 'paid' THEN amount ELSE 0 END) AS \"paid\",\n         SUM(CASE WHEN status = 'pending' THEN amount ELSE 0 END) AS \"pending\"\n         FROM invoices`;\n\n    const data = await Promise.all([\n      invoiceCountPromise,\n      customerCountPromise,\n      invoiceStatusPromise,\n    ]);\n\n    const numberOfInvoices = Number(data[0].rows[0].count ?? '0');\n    const numberOfCustomers = Number(data[1].rows[0].count ?? '0');\n    const totalPaidInvoices = formatCurrency(data[2].rows[0].paid ?? '0');\n    const totalPendingInvoices = formatCurrency(data[2].rows[0].pending ?? '0');\n\n    return {\n      numberOfCustomers,\n      numberOfInvoices,\n      totalPaidInvoices,\n      totalPendingInvoices,\n    };\n  } catch (error) {\n    console.error('Database Error:', error);\n    throw new Error('Failed to fetch card data.');\n  }\n}\n\nconst ITEMS_PER_PAGE = 6;\nexport async function fetchFilteredInvoices(\n  query: string,\n  currentPage: number\n) {\n  const offset = (currentPage - 1) * ITEMS_PER_PAGE;\n\n  try {\n    const invoices = await client.sql<InvoicesTable>`\n      SELECT\n        invoices.id,\n        invoices.amount,\n        invoices.date,\n        invoices.status,\n        customers.name,\n        customers.email,\n        customers.image_url\n      FROM invoices\n      JOIN customers ON invoices.customer_id = customers.id\n      WHERE\n        customers.name ILIKE ${`%${query}%`} OR\n        customers.email ILIKE ${`%${query}%`} OR\n        invoices.amount::text ILIKE ${`%${query}%`} OR\n        invoices.date::text ILIKE ${`%${query}%`} OR\n        invoices.status ILIKE ${`%${query}%`}\n      ORDER BY invoices.date DESC\n      LIMIT ${ITEMS_PER_PAGE} OFFSET ${offset}\n    `;\n\n    return invoices.rows;\n  } catch (error) {\n    console.error('Database Error:', error);\n    throw new Error('Failed to fetch invoices.');\n  }\n}\n\nexport async function fetchInvoicesPages(query: string) {\n  try {\n    const count = await client.sql`SELECT COUNT(*)\n    FROM invoices\n    JOIN customers ON invoices.customer_id = customers.id\n    WHERE\n      customers.name ILIKE ${`%${query}%`} OR\n      customers.email ILIKE ${`%${query}%`} OR\n      invoices.amount::text ILIKE ${`%${query}%`} OR\n      invoices.date::text ILIKE ${`%${query}%`} OR\n      invoices.status ILIKE ${`%${query}%`}\n  `;\n\n    const totalPages = Math.ceil(Number(count.rows[0].count) / ITEMS_PER_PAGE);\n    return totalPages;\n  } catch (error) {\n    console.error('Database Error:', error);\n    throw new Error('Failed to fetch total number of invoices.');\n  }\n}\n\nexport async function fetchInvoiceById(id: string) {\n  try {\n    const data = await client.sql<InvoiceForm>`\n      SELECT\n        invoices.id,\n        invoices.customer_id,\n        invoices.amount,\n        invoices.status\n      FROM invoices\n      WHERE invoices.id = ${id};\n    `;\n\n    const invoice = data.rows.map((invoice) => ({\n      ...invoice,\n      // Convert amount from cents to dollars\n      amount: invoice.amount / 100,\n    }));\n\n    return invoice[0];\n  } catch (error) {\n    console.error('Database Error:', error);\n    throw new Error('Failed to fetch invoice.');\n  }\n}\n\nexport async function fetchCustomers() {\n  try {\n    const data = await client.sql<CustomerField>`\n      SELECT\n        id,\n        name\n      FROM customers\n      ORDER BY name ASC\n    `;\n\n    const customers = data.rows;\n    return customers;\n  } catch (err) {\n    console.error('Database Error:', err);\n    throw new Error('Failed to fetch all customers.');\n  }\n}\n\nexport async function fetchFilteredCustomers(query: string) {\n  try {\n    const data = await client.sql<CustomersTableType>`\n\t\tSELECT\n\t\t  customers.id,\n\t\t  customers.name,\n\t\t  customers.email,\n\t\t  customers.image_url,\n\t\t  COUNT(invoices.id) AS total_invoices,\n\t\t  SUM(CASE WHEN invoices.status = 'pending' THEN invoices.amount ELSE 0 END) AS total_pending,\n\t\t  SUM(CASE WHEN invoices.status = 'paid' THEN invoices.amount ELSE 0 END) AS total_paid\n\t\tFROM customers\n\t\tLEFT JOIN invoices ON customers.id = invoices.customer_id\n\t\tWHERE\n\t\t  customers.name ILIKE ${`%${query}%`} OR\n        customers.email ILIKE ${`%${query}%`}\n\t\tGROUP BY customers.id, customers.name, customers.email, customers.image_url\n\t\tORDER BY customers.name ASC\n\t  `;\n\n    const customers = data.rows.map((customer) => ({\n      ...customer,\n      total_pending: formatCurrency(customer.total_pending),\n      total_paid: formatCurrency(customer.total_paid),\n    }));\n\n    return customers;\n  } catch (err) {\n    console.error('Database Error:', err);\n    throw new Error('Failed to fetch customer table.');\n  }\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 757, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 764, "column": 0}, "map": {"version":3,"sources":["file:///Users/strk/Sites/nextjs-dashboard/app/ui/invoices/table.tsx"],"sourcesContent":["import Image from 'next/image';\nimport { UpdateInvoice, DeleteInvoice } from '@/app/ui/invoices/buttons';\nimport InvoiceStatus from '@/app/ui/invoices/status';\nimport { formatDateToLocal, formatCurrency } from '@/app/lib/utils';\nimport { fetchFilteredInvoices } from '@/app/lib/data';\n\nexport default async function InvoicesTable({\n  query,\n  currentPage,\n}: {\n  query: string;\n  currentPage: number;\n}) {\n  const invoices = await fetchFilteredInvoices(query, currentPage);\n\n  return (\n    <div className='mt-6 flow-root'>\n      <div className='inline-block min-w-full align-middle'>\n        <div className='rounded-lg bg-gray-50 p-2 md:pt-0'>\n          <div className='md:hidden'>\n            {invoices?.map((invoice) => (\n              <div\n                key={invoice.id}\n                className='mb-2 w-full rounded-md bg-white p-4'\n              >\n                <div className='flex items-center justify-between border-b pb-4'>\n                  <div>\n                    <div className='mb-2 flex items-center'>\n                      <Image\n                        src={invoice.image_url}\n                        className='mr-2 rounded-full'\n                        width={28}\n                        height={28}\n                        alt={`${invoice.name}'s profile picture`}\n                      />\n                      <p>{invoice.name}</p>\n                    </div>\n                    <p className='text-sm text-gray-500'>{invoice.email}</p>\n                  </div>\n                  <InvoiceStatus status={invoice.status} />\n                </div>\n                <div className='flex w-full items-center justify-between pt-4'>\n                  <div>\n                    <p className='text-xl font-medium'>\n                      {formatCurrency(invoice.amount)}\n                    </p>\n                    <p>{formatDateToLocal(invoice.date)}</p>\n                  </div>\n                  <div className='flex justify-end gap-2'>\n                    <UpdateInvoice id={invoice.id} />\n                    <DeleteInvoice id={invoice.id} />\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n          <table className='hidden min-w-full text-gray-900 md:table'>\n            <thead className='rounded-lg text-left text-sm font-normal'>\n              <tr>\n                <th scope='col' className='px-4 py-5 font-medium sm:pl-6'>\n                  Customer\n                </th>\n                <th scope='col' className='px-3 py-5 font-medium'>\n                  Email\n                </th>\n                <th scope='col' className='px-3 py-5 font-medium'>\n                  Amount\n                </th>\n                <th scope='col' className='px-3 py-5 font-medium'>\n                  Date\n                </th>\n                <th scope='col' className='px-3 py-5 font-medium'>\n                  Status\n                </th>\n                <th scope='col' className='relative py-3 pl-6 pr-3'>\n                  <span className='sr-only'>Edit</span>\n                </th>\n              </tr>\n            </thead>\n            <tbody className='bg-white'>\n              {invoices?.map((invoice) => (\n                <tr\n                  key={invoice.id}\n                  className='w-full border-b py-3 text-sm last-of-type:border-none [&:first-child>td:first-child]:rounded-tl-lg [&:first-child>td:last-child]:rounded-tr-lg [&:last-child>td:first-child]:rounded-bl-lg [&:last-child>td:last-child]:rounded-br-lg'\n                >\n                  <td className='whitespace-nowrap py-3 pl-6 pr-3'>\n                    <div className='flex items-center gap-3'>\n                      <Image\n                        src={invoice.image_url}\n                        className='rounded-full'\n                        width={28}\n                        height={28}\n                        alt={`${invoice.name}'s profile picture`}\n                      />\n                      <p>{invoice.name}</p>\n                    </div>\n                  </td>\n                  <td className='whitespace-nowrap px-3 py-3'>\n                    {invoice.email}\n                  </td>\n                  <td className='whitespace-nowrap px-3 py-3'>\n                    {formatCurrency(invoice.amount)}\n                  </td>\n                  <td className='whitespace-nowrap px-3 py-3'>\n                    {formatDateToLocal(invoice.date)}\n                  </td>\n                  <td className='whitespace-nowrap px-3 py-3'>\n                    <InvoiceStatus status={invoice.status} />\n                  </td>\n                  <td className='whitespace-nowrap py-3 pl-6 pr-3'>\n                    <div className='flex justify-end gap-3'>\n                      <UpdateInvoice id={invoice.id} />\n                      <DeleteInvoice id={invoice.id} />\n                    </div>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1143, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1150, "column": 0}, "map": {"version":3,"sources":["file:///Users/strk/Sites/nextjs-dashboard/app/ui/skeletons.tsx"],"sourcesContent":["// Loading animation\nconst shimmer =\n  'before:absolute before:inset-0 before:-translate-x-full before:animate-[shimmer_2s_infinite] before:bg-gradient-to-r before:from-transparent before:via-white/60 before:to-transparent';\n\nexport function CardSkeleton() {\n  return (\n    <div\n      className={`${shimmer} relative overflow-hidden rounded-xl bg-gray-100 p-2 shadow-sm`}\n    >\n      <div className=\"flex p-4\">\n        <div className=\"h-5 w-5 rounded-md bg-gray-200\" />\n        <div className=\"ml-2 h-6 w-16 rounded-md bg-gray-200 text-sm font-medium\" />\n      </div>\n      <div className=\"flex items-center justify-center truncate rounded-xl bg-white px-4 py-8\">\n        <div className=\"h-7 w-20 rounded-md bg-gray-200\" />\n      </div>\n    </div>\n  );\n}\n\nexport function CardsSkeleton() {\n  return (\n    <>\n      <CardSkeleton />\n      <CardSkeleton />\n      <CardSkeleton />\n      <CardSkeleton />\n    </>\n  );\n}\n\nexport function RevenueChartSkeleton() {\n  return (\n    <div className={`${shimmer} relative w-full overflow-hidden md:col-span-4`}>\n      <div className=\"mb-4 h-8 w-36 rounded-md bg-gray-100\" />\n      <div className=\"rounded-xl bg-gray-100 p-4\">\n        <div className=\"sm:grid-cols-13 mt-0 grid h-[410px] grid-cols-12 items-end gap-2 rounded-md bg-white p-4 md:gap-4\" />\n        <div className=\"flex items-center pb-2 pt-6\">\n          <div className=\"h-5 w-5 rounded-full bg-gray-200\" />\n          <div className=\"ml-2 h-4 w-20 rounded-md bg-gray-200\" />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport function InvoiceSkeleton() {\n  return (\n    <div className=\"flex flex-row items-center justify-between border-b border-gray-100 py-4\">\n      <div className=\"flex items-center\">\n        <div className=\"mr-2 h-8 w-8 rounded-full bg-gray-200\" />\n        <div className=\"min-w-0\">\n          <div className=\"h-5 w-40 rounded-md bg-gray-200\" />\n          <div className=\"mt-2 h-4 w-12 rounded-md bg-gray-200\" />\n        </div>\n      </div>\n      <div className=\"mt-2 h-4 w-12 rounded-md bg-gray-200\" />\n    </div>\n  );\n}\n\nexport function LatestInvoicesSkeleton() {\n  return (\n    <div\n      className={`${shimmer} relative flex w-full flex-col overflow-hidden md:col-span-4`}\n    >\n      <div className=\"mb-4 h-8 w-36 rounded-md bg-gray-100\" />\n      <div className=\"flex grow flex-col justify-between rounded-xl bg-gray-100 p-4\">\n        <div className=\"bg-white px-6\">\n          <InvoiceSkeleton />\n          <InvoiceSkeleton />\n          <InvoiceSkeleton />\n          <InvoiceSkeleton />\n          <InvoiceSkeleton />\n        </div>\n        <div className=\"flex items-center pb-2 pt-6\">\n          <div className=\"h-5 w-5 rounded-full bg-gray-200\" />\n          <div className=\"ml-2 h-4 w-20 rounded-md bg-gray-200\" />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default function DashboardSkeleton() {\n  return (\n    <>\n      <div\n        className={`${shimmer} relative mb-4 h-8 w-36 overflow-hidden rounded-md bg-gray-100`}\n      />\n      <div className=\"grid gap-6 sm:grid-cols-2 lg:grid-cols-4\">\n        <CardSkeleton />\n        <CardSkeleton />\n        <CardSkeleton />\n        <CardSkeleton />\n      </div>\n      <div className=\"mt-6 grid grid-cols-1 gap-6 md:grid-cols-4 lg:grid-cols-8\">\n        <RevenueChartSkeleton />\n        <LatestInvoicesSkeleton />\n      </div>\n    </>\n  );\n}\n\nexport function TableRowSkeleton() {\n  return (\n    <tr className=\"w-full border-b border-gray-100 last-of-type:border-none [&:first-child>td:first-child]:rounded-tl-lg [&:first-child>td:last-child]:rounded-tr-lg [&:last-child>td:first-child]:rounded-bl-lg [&:last-child>td:last-child]:rounded-br-lg\">\n      {/* Customer Name and Image */}\n      <td className=\"relative overflow-hidden whitespace-nowrap py-3 pl-6 pr-3\">\n        <div className=\"flex items-center gap-3\">\n          <div className=\"h-8 w-8 rounded-full bg-gray-100\"></div>\n          <div className=\"h-6 w-24 rounded bg-gray-100\"></div>\n        </div>\n      </td>\n      {/* Email */}\n      <td className=\"whitespace-nowrap px-3 py-3\">\n        <div className=\"h-6 w-32 rounded bg-gray-100\"></div>\n      </td>\n      {/* Amount */}\n      <td className=\"whitespace-nowrap px-3 py-3\">\n        <div className=\"h-6 w-16 rounded bg-gray-100\"></div>\n      </td>\n      {/* Date */}\n      <td className=\"whitespace-nowrap px-3 py-3\">\n        <div className=\"h-6 w-16 rounded bg-gray-100\"></div>\n      </td>\n      {/* Status */}\n      <td className=\"whitespace-nowrap px-3 py-3\">\n        <div className=\"h-6 w-16 rounded bg-gray-100\"></div>\n      </td>\n      {/* Actions */}\n      <td className=\"whitespace-nowrap py-3 pl-6 pr-3\">\n        <div className=\"flex justify-end gap-3\">\n          <div className=\"h-[38px] w-[38px] rounded bg-gray-100\"></div>\n          <div className=\"h-[38px] w-[38px] rounded bg-gray-100\"></div>\n        </div>\n      </td>\n    </tr>\n  );\n}\n\nexport function InvoicesMobileSkeleton() {\n  return (\n    <div className=\"mb-2 w-full rounded-md bg-white p-4\">\n      <div className=\"flex items-center justify-between border-b border-gray-100 pb-8\">\n        <div className=\"flex items-center\">\n          <div className=\"mr-2 h-8 w-8 rounded-full bg-gray-100\"></div>\n          <div className=\"h-6 w-16 rounded bg-gray-100\"></div>\n        </div>\n        <div className=\"h-6 w-16 rounded bg-gray-100\"></div>\n      </div>\n      <div className=\"flex w-full items-center justify-between pt-4\">\n        <div>\n          <div className=\"h-6 w-16 rounded bg-gray-100\"></div>\n          <div className=\"mt-2 h-6 w-24 rounded bg-gray-100\"></div>\n        </div>\n        <div className=\"flex justify-end gap-2\">\n          <div className=\"h-10 w-10 rounded bg-gray-100\"></div>\n          <div className=\"h-10 w-10 rounded bg-gray-100\"></div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport function InvoicesTableSkeleton() {\n  return (\n    <div className=\"mt-6 flow-root\">\n      <div className=\"inline-block min-w-full align-middle\">\n        <div className=\"rounded-lg bg-gray-50 p-2 md:pt-0\">\n          <div className=\"md:hidden\">\n            <InvoicesMobileSkeleton />\n            <InvoicesMobileSkeleton />\n            <InvoicesMobileSkeleton />\n            <InvoicesMobileSkeleton />\n            <InvoicesMobileSkeleton />\n            <InvoicesMobileSkeleton />\n          </div>\n          <table className=\"hidden min-w-full text-gray-900 md:table\">\n            <thead className=\"rounded-lg text-left text-sm font-normal\">\n              <tr>\n                <th scope=\"col\" className=\"px-4 py-5 font-medium sm:pl-6\">\n                  Customer\n                </th>\n                <th scope=\"col\" className=\"px-3 py-5 font-medium\">\n                  Email\n                </th>\n                <th scope=\"col\" className=\"px-3 py-5 font-medium\">\n                  Amount\n                </th>\n                <th scope=\"col\" className=\"px-3 py-5 font-medium\">\n                  Date\n                </th>\n                <th scope=\"col\" className=\"px-3 py-5 font-medium\">\n                  Status\n                </th>\n                <th\n                  scope=\"col\"\n                  className=\"relative pb-4 pl-3 pr-6 pt-2 sm:pr-6\"\n                >\n                  <span className=\"sr-only\">Edit</span>\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white\">\n              <TableRowSkeleton />\n              <TableRowSkeleton />\n              <TableRowSkeleton />\n              <TableRowSkeleton />\n              <TableRowSkeleton />\n              <TableRowSkeleton />\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1917, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1923, "column": 0}, "map": {"version":3,"sources":["file:///Users/strk/Sites/nextjs-dashboard/app/dashboard/invoices/page.tsx"],"sourcesContent":["import Pagination from '@/app/ui/invoices/pagination';\nimport Search from '@/app/ui/search';\nimport Table from '@/app/ui/invoices/table';\nimport { CreateInvoice } from '@/app/ui/invoices/buttons';\nimport { lusitana } from '@/app/ui/fonts';\nimport { InvoicesTableSkeleton } from '@/app/ui/skeletons';\nimport { Suspense } from 'react';\nimport { fetchInvoicesPages } from '@/app/lib/data';\n\nexport default async function Page(props: {\n  searchParams?: Promise<{\n    query?: string;\n    page?: string;\n  }>;\n}) {\n  const searchParams = await props.searchParams;\n  const query = searchParams?.query || '';\n  const currentPage = Number(searchParams?.page) || 1;\n  const totalPages = await fetchInvoicesPages(query);\n\n  return (\n    <div className='w-full'>\n      <div className='flex w-full items-center justify-between'>\n        <h1 className={`${lusitana.className} text-2xl`}>Invoices</h1>\n      </div>\n      <div className='mt-4 flex items-center justify-between gap-2 md:mt-8'>\n        <Search placeholder='Search invoices...' />\n        <CreateInvoice />\n      </div>\n      <Suspense key={query + currentPage} fallback={<InvoicesTableSkeleton />}>\n        <Table query={query} currentPage={currentPage} />\n      </Suspense>\n      <div className='mt-5 flex w-full justify-center'>\n        <Pagination totalPages={totalPages} />\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;;;;;;;;;;;;;;;;AAKe,eAAe,KAAK,KAKlC;IACC,MAAM,eAAe,MAAM,MAAM,YAAY;IAC7C,MAAM,QAAQ,cAAc,SAAS;IACrC,MAAM,cAAc,OAAO,cAAc,SAAS;IAClD,MAAM,aAAa,MAAM,CAAA,GAAA,kHAAA,CAAA,qBAAkB,AAAD,EAAE;IAE5C,qBACE,0bAAC;QAAI,WAAU;;0BACb,0bAAC;gBAAI,WAAU;0BACb,cAAA,0bAAC;oBAAG,WAAW,GAAG,mLAAA,CAAA,WAAQ,CAAC,SAAS,CAAC,SAAS,CAAC;8BAAE;;;;;;;;;;;0BAEnD,0bAAC;gBAAI,WAAU;;kCACb,0bAAC,oHAAA,CAAA,UAAM;wBAAC,aAAY;;;;;;kCACpB,0bAAC,iIAAA,CAAA,gBAAa;;;;;;;;;;;0BAEhB,0bAAC,iZAAA,CAAA,WAAQ;gBAA2B,wBAAU,0bAAC,uHAAA,CAAA,wBAAqB;;;;;0BAClE,cAAA,0bAAC,+HAAA,CAAA,UAAK;oBAAC,OAAO;oBAAO,aAAa;;;;;;eADrB,QAAQ;;;;;0BAGvB,0bAAC;gBAAI,WAAU;0BACb,cAAA,0bAAC,oIAAA,CAAA,UAAU;oBAAC,YAAY;;;;;;;;;;;;;;;;;AAIhC"}},
    {"offset": {"line": 2035, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2048, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 2052, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}